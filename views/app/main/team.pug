extends ../../partials/head
block content
  input.team-object-value(value= team._id)
  input.user-object-value(value= user._id)
  .all-wrapper
    .all-header
      a(href="/").all-header-name scourt
      - if(user.date) {
        a(href="/app/edit").user-description
          span.user-name Hi, #{user.name.split(" ")[0]}
          img.user-image(src="/res/uploads/" + user.profileFoto)
      - } else {
        .user-description
          span.user-name Hi, #{user.name.split(" ")[0]}
          img.user-image(src="/res/uploads/" + user.profileFoto)
      - }
    .all-content-dashboard
      .content-side-header
        .header-part-first.team-header-part
          span Team Page
        .header-part.message-header-part
          span Messages
        .header-part.date-header-part
          span Calendar
      .team-main-wrapper
        .team-main-header
          h2 #{team.name}
          span #{team.players.length} joined players
          span created at #{team.createdAt}
        .team-main-content
          .team-main-content-left
            .team-picture-wrapper
              img.team-picture(src="/res/uploads/" + team.teamPhoto)
            span.team-header-span Team Description:
            span.team-description "#{team.description}"
            span.team-header-span Team Id:
            span.team-id #{team.teamId}
            span.team-id-explanation You can use this id to invite your team members to your team
          .team-main-content-right
            span.team-header-span Players List:
            .players-list-wrapper 
              each player in team.players
                .each-player-in-team
                  span #{player.name}
                  span.each-player-email (#{player.email})
      .messages-wrapper
        .messages-block#messages-block
          each message in team.messages
            - let classValue
            - if (message.sender._id.toString() === user._id.toString()) {
            - classValue = 'right';
            - } else {
            - classValue = 'left'; 
            - }
            .each-message(class=classValue)
              .message-sender
                span #{message.sender.name}
              .message-content
                span #{message.content}
        form.new-message-form
          button.message-sending-button Send
          input.message-sender-team-input(type="text" value=team._id)
          input.message-sender-input(type="text" value=user._id)
          input.message-sending-input(type="text", name="message", autocomplete="off", autofocus, placeholder="Your message")
      .calendar-wrapper
        - if (!user.date) {
          .add-new-event-line 
            .add-new-button
              i.fas.fa-plus
              span Add new event
        - }
        .calendar-header
          .calendar-header-part
            span Monday
          .calendar-header-part
            span Tuesday
          .calendar-header-part
            span Wendsday
          .calendar-header-part
            span Thursday
          .calendar-header-part
            span Friday
          .calendar-header-part
            span Saturday
          .calendar-header-part
            span Sunday
        .calendar-main-box
          - if ((((new Date(new Date().getFullYear(), new Date().getMonth(), 1).getDay() - 1) % 7)) == 0) {
            - for(let i = 0; i < 6; i++) {
              .calendar-each-day
            - }
          - } else {
            - for(let i = 0; i < (new Date(new Date().getFullYear(), new Date().getMonth(), 1).getDay() - 1); i++) {
              .calendar-each-day
            - }
          - }
          - if (month[new Date().getMonth()].name == 'February') {
            - if (new Date().getFullYear() % 4 == 0) {
              - for(let i = 1; i <= month[new Date().getMonth()].day2; i++) {
                - if (i == new Date().getDate()) {
                  .calendar-each-day
                    .calendar-each-day-header.today
                      span #{i} #{month[new Date().getMonth()].name}
                - } else {
                  .calendar-each-day
                    .calendar-each-day-header
                      span #{i} #{month[new Date().getMonth()].name}
                - }
              - }
            - } else {
              - for(let i = 1; i <= month[new Date().getMonth()].day; i++) {
                - if (i == new Date().getDate()) {
                  .calendar-each-day
                    .calendar-each-day-header.today
                      span #{i} #{month[new Date().getMonth()].name}
                - } else {
                  .calendar-each-day
                    .calendar-each-day-header
                      span #{i} #{month[new Date().getMonth()].name}
                - }
              - }
            - } 
          - } else {
            - for(let i = 1; i <= month[new Date().getMonth()].day; i++) {
              - if (i == new Date().getDate()) {
                .calendar-each-day
                  .calendar-each-day-header.today
                    span #{i} #{month[new Date().getMonth()].name}
              - } else {
                .calendar-each-day
                  .calendar-each-day-header
                    span #{i} #{month[new Date().getMonth()].name}
              - }
            - }
          - }
          - for(let i = 0; i < 7 - ((new Date(new Date().getFullYear(), new Date().getMonth(), month[new Date().getMonth()].day).getDay()) % 7); i++) {
            .calendar-each-day
          - }
          
